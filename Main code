import requests
import random
import time
import openai

openai.api_key = 'replace with openAI Api'  # Replace with your OpenAI API key

header = {
    'authorization': 'Give_your_discord_authorization_key'  # Replace with your Discord authorization token
}

replied_message_ids = set()


def send_message(content, channel_id, message_reference=None):
    payload = {
        'content': content
    }

    if message_reference:
        payload['message_reference'] = {
            'message_id': message_reference['message_id'],
            'channel_id': message_reference['channel_id']
        }

    requests.post(f'Give discord header channel link', json=payload, headers=header)


def fetch_messages():
    response = requests.get('Give discord header channel link', headers=header)
    messages = response.json()
    return messages

def generate_reply(message_content):
    reply = openai.Completion.create(
        engine="text-davinci-003",
        prompt=message_content,
        max_tokens=50,  # Limit the reply to 50 tokens (words)
        n=1,
        temperature=0.7
    )
    reply_text = reply.choices[0].text.strip()
    return reply_text


while True:
    messages = fetch_messages()

    if len(messages) > 0:
        latest_message = messages[0]  # Get the latest message from the list

        message_content = latest_message['content']
        author_id = latest_message['author']['id']
        message_id = latest_message['id']
        channel_id = latest_message['channel_id']

        if author_id != 'Give discord user ID(not name)' and message_id not in replied_message_ids:
            reply_text = generate_reply(message_content)
            reply_content = f"{reply_text}"
            send_message(reply_content, channel_id, {'message_id': message_id, 'channel_id': channel_id})

            replied_message_ids.add(message_id)

    # Generate a random time interval between 1 to 2 minutes
    # interval = random.randint(60, 120)
    # time.sleep(interval)
    #if you  want timer then activate the two lines above by cutting the hash
